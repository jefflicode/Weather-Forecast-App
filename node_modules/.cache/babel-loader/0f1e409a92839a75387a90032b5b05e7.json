{"ast":null,"code":"var _jsxFileName = \"/Users/jefflee/Desktop/weather-app/src/App.js\";\nimport React from 'react'; // import React object from the react package in the package.json file\n\nimport Titles from \"./components/Titles\";\nimport Form from './components/Form';\nimport Weather from './components/Weather'; // This is the wrapper componenet that will contain all the other tiny components \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"5aa9b916971ad212f9cd5f0fc1e8ce4f\"; // First Initialize a component\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature_max: undefined,\n      temperature_min: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault(); // prevent page refresh when getting data from API\n\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`); // template string allows you to inject the variable you defined within a file \n\n      const data = await api_call.json();\n\n      if (city && country) {\n        // when user tries to seach weather without giving input, this would make sure our program won't break (error)\n        console.log(data); // display the data Object (obtained from API call) to the console\n\n        this.setState( // always use setState instead of directly doing variable assignment\n        {\n          temperature_max: data.main.temp_max,\n          temperature_min: data.main.temp_min,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature_max: undefined,\n          temperature_min: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter a city and country name\"\n        });\n      } // state is responsible for keeping track of the change of data within a component \n\n    };\n  }\n\n  render() {\n    // render is a built in method from react component, it returns jsx (not html)\n    return (\n      /*#__PURE__*/\n      // make sure to return only one div, (one parent element)\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Titles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            getWeather: this.getWeather\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 weather-info\",\n          children: /*#__PURE__*/_jsxDEV(Weather, {\n            temperature_max: this.state.temperature_max,\n            temperature_min: this.state.temperature_min,\n            humidity: this.state.humidity,\n            city: this.state.city,\n            country: this.state.country,\n            description: this.state.description,\n            error: this.state.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this) // whatever is rended in here will get displayed on the screen \n\n    );\n  }\n\n}\n\n;\nexport default App; // how react works:\n// multiple tiny UI component files get imported into App.js\n// then App.js would render those files into the public index.html file, then display to the web browser","map":{"version":3,"sources":["/Users/jefflee/Desktop/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","state","temperature_max","undefined","temperature_min","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","console","log","setState","main","temp_max","temp_min","name","sys","weather","render"],"mappings":"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","sourcesContent":["import React from 'react'; // import React object from the react package in the package.json file\nimport Titles from \"./components/Titles\";\nimport Form from './components/Form';\nimport Weather from './components/Weather'\n\n// This is the wrapper componenet that will contain all the other tiny components \n\nconst API_KEY = \"5aa9b916971ad212f9cd5f0fc1e8ce4f\";\n\n// First Initialize a component\nclass App extends React.Component {  // React.Component lives in node_modules\n  state = {\n    temperature_max: undefined,\n    temperature_min: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault(); // prevent page refresh when getting data from API\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n                                // template string allows you to inject the variable you defined within a file \n    \n    const data = await api_call.json();\n\n    if (city && country) {// when user tries to seach weather without giving input, this would make sure our program won't break (error)\n      console.log(data); // display the data Object (obtained from API call) to the console\n      this.setState(  // always use setState instead of directly doing variable assignment\n        {\n          temperature_max: data.main.temp_max,\n          temperature_min: data.main.temp_min,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        }\n      );\n    } else {\n      this.setState(\n        {\n          temperature_max: undefined,\n          temperature_min: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"Please enter a city and country name\"\n        }\n      );\n    }\n    // state is responsible for keeping track of the change of data within a component \n  }\n\n\n  render() { // render is a built in method from react component, it returns jsx (not html)\n      return (  // make sure to return only one div, (one parent element)\n        <div>\n          <Titles />\n          <div className=\"mt-4\">\n            <Form getWeather={this.getWeather}/>\n          </div>\n          <div className=\"mt-4 weather-info\">\n          <Weather \n            temperature_max={this.state.temperature_max}\n            temperature_min={this.state.temperature_min} \n            humidity={this.state.humidity}\n            city={this.state.city}\n            country={this.state.country}\n            description={this.state.description}\n            error={this.state.error}\n          />\n          </div>\n        </div>           // whatever is rended in here will get displayed on the screen \n      )\n  }\n  \n\n};\n\nexport default App;\n\n// how react works:\n// multiple tiny UI component files get imported into App.js\n// then App.js would render those files into the public index.html file, then display to the web browser"]},"metadata":{},"sourceType":"module"}