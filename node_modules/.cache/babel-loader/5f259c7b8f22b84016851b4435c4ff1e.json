{"ast":null,"code":"var _jsxFileName = \"/Users/jefflee/Desktop/weather-app/src/App.js\";\nimport React from 'react'; // import React object from the react package in the package.json file\n\nimport Titles from \"./components/Titles\";\nimport Form from './components/Form';\nimport Weather from './components/Weather'; // This is the wrapper componenet that will contain all the other tiny components \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"5aa9b916971ad212f9cd5f0fc1e8ce4f\"; // First Initialize a component\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q={city name},{state code},{country code}&appid=${API_KEY}`); // template string allows you to inject the variable you defined within a file \n    };\n  }\n\n  render() {\n    // render is a built in method from react component, it returns jsx (not html)\n    return (\n      /*#__PURE__*/\n      // make sure to return only one div, (one parent element)\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Titles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this) // whatever is rended in here will get displayed on the screen \n\n    );\n  }\n\n}\n\nexport default App; // how react works:\n// multiple tiny UI component files get imported into App.js\n// then App.js would render those files into the public index.html file, then display to the web browser","map":{"version":3,"sources":["/Users/jefflee/Desktop/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","getWeather","api_call","fetch","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCC,UADgC,GACnB,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kGAAiGL,OAAQ,EAA3G,CAA5B,CADuB,CACqH;AAC7I,KAH+B;AAAA;;AAIhCM,EAAAA,MAAM,GAAG;AAAE;AACP;AAAA;AAAU;AACR;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAKmB;;AALnB;AAOH;;AAZ+B;;AAelC,eAAeL,GAAf,C,CAEA;AACA;AACA","sourcesContent":["import React from 'react'; // import React object from the react package in the package.json file\nimport Titles from \"./components/Titles\";\nimport Form from './components/Form';\nimport Weather from './components/Weather'\n\n// This is the wrapper componenet that will contain all the other tiny components \n\nconst API_KEY = \"5aa9b916971ad212f9cd5f0fc1e8ce4f\";\n\n// First Initialize a component\nclass App extends React.Component {  // React.Component lives in node_modules\n  getWeather = async () => {\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q={city name},{state code},{country code}&appid=${API_KEY}`);  // template string allows you to inject the variable you defined within a file \n  }\n  render() { // render is a built in method from react component, it returns jsx (not html)\n      return (  // make sure to return only one div, (one parent element)\n        <div>\n          <Titles />\n          <Form />\n          <Weather />\n        </div>           // whatever is rended in here will get displayed on the screen \n      )\n  }\n}\n\nexport default App;\n\n// how react works:\n// multiple tiny UI component files get imported into App.js\n// then App.js would render those files into the public index.html file, then display to the web browser"]},"metadata":{},"sourceType":"module"}